---
- name: Software update
  hosts: Junos

  roles:
  - Juniper.junos
  connection: local
  gather_facts: no

  vars:
    wait_time: 900
    log_dir: "/home/logs/software"
    log_file: "{{ log_dir }}/{{ inventory_hostname }}-software.log"
    netconf_port: 830

  vars_files:
  - vault-vars.yml

#specify junos verion
  pre_tasks:
  - set_fact:
       product={{ inventory_hostname | regex_replace("\w+-(\w+)-\w+-\w+", "\\1") }}
    when: inventory_hostname[0:3] is search("^[A-Za-z]")

  - set_fact:
       product={{ product | regex_replace("\w+-(\w+)-\w+", "\\1") }}
    when: inventory_hostname[0:3] is search("^[A-Za-z]")

  - debug:
      var: product

  tasks:
  - name: Retrieve version from device running Junos OS
    juniper_junos_facts:
      provider: "{{ lab_credentials }}"

  - name : Compare current version with Requested version
    block:
      - name: Exit Script if version is Up to date
        debug:
          msg: "{{ inventory_hostname }} software version is up to date. No other action required. Ignoring host..."
        when: 'junos.version == version'
        
      - set_fact:
          dev_version: "{{ version }}"
    when: 'version|lower != "jtac"'

  - name : Compare current version with JTAC version
    block:
      - name: Get JTAC version from Juniper site
        command: python jtac_retrieve.py -m {{ junos.model }}
        register: retrieved_jtac_version
        ignore_errors: True

      - name: Fail the play if the JTAC version cannot be retrieved
        fail:
          msg: "Could not retrieve JTAC version. Please specify the version at the beginning of the play"
        when: "retrieved_jtac_version.failed == True"

      - set_fact:
          jtac_version: "{{ retrieved_jtac_version.stdout_lines }}"

      - debug:
          msg: "The JTAC version retrieved from Juniper site is '{{ jtac_version[0] }}'"

      - name: Compare current version with JTAC version
        debug:
          msg: "No Upgrade required for {{ inventory_hostname }}. Junos device is currently running JTAC version. Exiting host..."
        when:  jtac_version[0] in junos.version
        
      - set_fact:
          dev_version: "{{ jtac_version[0] }}"
    when: version|lower == "jtac"

  - name: Include url from product
    include_vars:
      file: "models/{{ product }}.yml"

  - include_tasks: install_version.yml
    when: 'not dev_version in junos.version'

  handlers:
  - name: update_user
    debug:
      msg: "Junos software upgrade for device {{ inventory_hostname }} is now complete. Rebooted and waiting for device to come back online..."

  - name: wait_reboot
    wait_for:
      host: "{{ inventory_hostname }}.amerpoc.jnpr.net"
      port: "{{ netconf_port }}"
      timeout: "{{ wait_time }}"
    when: not response.check_mode

